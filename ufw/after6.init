#!/bin/sh
# ##################################################
# ufw-ipset-blocklist-autoupdate (IPv4 + IPv6, CentOS 6 Compatible)
# ##################################################

IPSET_BIN="$(command -v ipset)"
IPTABLES_BIN="$(command -v iptables)"
IP6TABLES_BIN="$(command -v ip6tables)"
IPSET_DIR="/var/lib/ipset"
LOG_PREFIX="[UFW BLOCK]"

log() {
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $1" | logger -t ufw-ipset-blocklist
}

check_rule_exists() {
    # $1 = iptables command, $2 = chain, $3 = setname
    $1-save 2>/dev/null | grep -q -- "-A $2 .*--match-set $3"
}

# Cek apakah ipset tersedia
if [ ! -x "$IPSET_BIN" ]; then
    echo "ERROR: ipset binary not found."
    exit 1
fi

# Cek apakah iptables tersedia
if [ ! -x "$IPTABLES_BIN" ]; then
    echo "ERROR: iptables binary not found."
    exit 1
fi

# Cek ip6tables, kalau tidak ada disable IPv6 rules
if [ ! -x "$IP6TABLES_BIN" ]; then
    log "WARNING: ip6tables binary not found, IPv6 blocking disabled."
    USE_IPV6=false
else
    USE_IPV6=true
fi

# Cek direktori ipset
if [ ! -d "$IPSET_DIR" ]; then
    echo "ERROR: ipset data directory does not exist: $IPSET_DIR" >&2
    exit 1
fi

case "$1" in
start)
    log "Starting IPSET blocklist loading..."

    # IPv4
    find "$IPSET_DIR" -name "*-inet.save" -print0 | while IFS= read -r -d '' f; do
        [ ! -s "$f" ] && continue
        listname=$(basename "$f" .save)

        log "Restoring IPv4 ipset list: $listname"
        $IPSET_BIN restore -! < "$f"

        if ! check_rule_exists "$IPTABLES_BIN" INPUT "$listname"; then
            $IPTABLES_BIN -I INPUT -m set --match-set "$listname" src -j DROP
            $IPTABLES_BIN -I INPUT -m set --match-set "$listname" src -j LOG --log-prefix "$LOG_PREFIX IPv4 $listname "
            log "Added IPv4 iptables rules for $listname"
        fi
    done

    # IPv6
    if [ "$USE_IPV6" = true ]; then
        find "$IPSET_DIR" -name "*-inet6.save" -print0 | while IFS= read -r -d '' f; do
            [ ! -s "$f" ] && continue
            listname=$(basename "$f" .save)

            log "Restoring IPv6 ipset list: $listname"
            $IPSET_BIN restore -! < "$f"

            if ! check_rule_exists "$IP6TABLES_BIN" INPUT "$listname"; then
                $IP6TABLES_BIN -I INPUT -m set --match-set "$listname" src -j DROP
                $IP6TABLES_BIN -I INPUT -m set --match-set "$listname" src -j LOG --log-prefix "$LOG_PREFIX IPv6 $listname "
                log "Added IPv6 ip6tables rules for $listname"
            fi
        done
    fi

    log "IPSET blocklist loaded successfully."
    ;;
stop)
    log "Stopping IPSET blocklist..."

    # IPv4
    find "$IPSET_DIR" -name "*-inet.save" -print0 | while IFS= read -r -d '' f; do
        [ ! -s "$f" ] && continue
        listname=$(basename "$f" .save)

        $IPTABLES_BIN -D INPUT -m set --match-set "$listname" src -j DROP 2>/dev/null && log "Removed IPv4 DROP rule for $listname"
        $IPTABLES_BIN -D INPUT -m set --match-set "$listname" src -j LOG --log-prefix "$LOG_PREFIX IPv4 $listname " 2>/dev/null && log "Removed IPv4 LOG rule for $listname"
        $IPSET_BIN destroy -q "$listname" 2>/dev/null && log "Destroyed IPv4 ipset list: $listname"
    done

    # IPv6
    if [ "$USE_IPV6" = true ]; then
        find "$IPSET_DIR" -name "*-inet6.save" -print0 | while IFS= read -r -d '' f; do
            [ ! -s "$f" ] && continue
            listname=$(basename "$f" .save)

            $IP6TABLES_BIN -D INPUT -m set --match-set "$listname" src -j DROP 2>/dev/null && log "Removed IPv6 DROP rule for $listname"
            $IP6TABLES_BIN -D INPUT -m set --match-set "$listname" src -j LOG --log-prefix "$LOG_PREFIX IPv6 $listname " 2>/dev/null && log "Removed IPv6 LOG rule for $listname"
            $IPSET_BIN destroy -q "$listname" 2>/dev/null && log "Destroyed IPv6 ipset list: $listname"
        done
    fi

    log "IPSET blocklist stopped."
    ;;
status)
    echo "=== Current IPSET Lists ==="
    $IPSET_BIN list || echo "No ipset lists found."
    ;;
*)
    echo "Usage: $0 {start|stop|status}"
    exit 1
    ;;
esac
