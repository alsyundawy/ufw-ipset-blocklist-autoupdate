#!/bin/sh
# ##################################################
# ufw-ipset-blocklist-autoupdate (IPv4 Only)
# Load & manage IPSET blocklists for UFW/iptables
# ##################################################

IPSET_BIN="$(command -v ipset)"
IPTABLES_BIN="$(command -v iptables)"
IPSET_DIR="/var/lib/ipset"
LOG_PREFIX="[UFW BLOCK]"

log() {
    local msg="$1"
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $msg" | logger -t ufw-ipset-blocklist
}

error_exit() {
    echo "ERROR: $1" >&2
    exit 1
}

# === Sanity Checks ===
[ -x "$IPSET_BIN" ]     || error_exit "ipset binary not found."
[ -x "$IPTABLES_BIN" ]  || error_exit "iptables binary not found."
[ -d "$IPSET_DIR" ]     || error_exit "ipset data directory does not exist: $IPSET_DIR"

case "$1" in
start)
    log "Starting IPv4 IPSET blocklist loading..."

    find "$IPSET_DIR" -type f -name "*-inet.save" -print0 |
    while IFS= read -r -d '' file; do
        listname="$(basename "$file" .save)"

        log "Restoring ipset list: $listname"
        $IPSET_BIN restore -! < "$file" || log "Failed to restore $listname"

        if ! $IPTABLES_BIN -C INPUT -m set --match-set "$listname" src -j DROP 2>/dev/null; then
            $IPTABLES_BIN -I INPUT -m set --match-set "$listname" src -j DROP
            $IPTABLES_BIN -I INPUT -m set --match-set "$listname" src -j LOG --log-prefix "$LOG_PREFIX $listname " --log-level 4
            log "Added iptables rules for $listname"
        else
            log "iptables rules for $listname already exist"
        fi
    done

    log "IPv4 IPSET blocklist loaded successfully."
    ;;
stop)
    log "Stopping IPv4 IPSET blocklist..."

    find "$IPSET_DIR" -type f -name "*-inet.save" -print0 |
    while IFS= read -r -d '' file; do
        listname="$(basename "$file" .save)"

        $IPTABLES_BIN -D INPUT -m set --match-set "$listname" src -j DROP 2>/dev/null && log "Removed DROP rule for $listname"
        $IPTABLES_BIN -D INPUT -m set --match-set "$listname" src -j LOG --log-prefix "$LOG_PREFIX $listname " --log-level 4 2>/dev/null && log "Removed LOG rule for $listname"
        $IPSET_BIN destroy -q "$listname" 2>/dev/null && log "Destroyed ipset list: $listname"
    done

    log "IPv4 IPSET blocklist stopped."
    ;;
status)
    echo "=== Current IPSET Lists ==="
    $IPSET_BIN list || echo "No ipset lists found."
    ;;
*)
    echo "Usage: $0 {start|stop|status}"
    exit 1
    ;;
esac
